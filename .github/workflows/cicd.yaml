name: Deploy Pipeline

on:
  push:
    branches:
      - feature/B-389745-cicd

jobs:
  deploy:
    runs-on: hf-cicd-ubuntu-latest
    environment: develop

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Instalar Node.js versión 18
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Paso 3: Instalar dependencias del proyecto
      - name: Install dependencies
        run: npm ci

      # Paso 4: Instalar Twilio CLI
      - name: Install Twilio CLI
        run: npm install -g twilio

      # Paso 5: Configurar variables de entorno desde environment "develop"
      - name: Configure environment variables
        run: |
          echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> .env
          echo "API_KEY_SID=${{ secrets.API_KEY_SID }}" >> .env
          echo "API_KEY_SECRET=${{ secrets.API_KEY_SECRET }}" >> .env
          echo "TWILIO_WORKSPACE_SID=${{ secrets.TWILIO_WORKSPACE_SID }}" >> .env
          echo "STAGE=${{ vars.STAGE }}" >> .env
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          API_KEY_SID: ${{ secrets.API_KEY_SID }}
          API_KEY_SECRET: ${{ secrets.API_KEY_SECRET }}
          TWILIO_WORKSPACE_SID: ${{ secrets.TWILIO_WORKSPACE_SID }}
          STAGE: ${{ vars.STAGE }}

      - name: Fetch full history for diff
        run: git fetch --unshallow

      # Paso 6: Detectar cambios en las carpetas y ejecutar despliegues
      - name: Detect changes and deploy
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"

          DEPLOY_COMMANDS=""

          for folder in $CHANGED_FILES; do
            case "$folder" in
              resources/chat/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:chat -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/CCO\ MS/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:cco-ms -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/CCO\ PS/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:cco-ms -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/CCO_Progressive_Testing_Flow_Multilingual/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:cco-progressive-testing -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/Declined\ Payment/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:declined-payment -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/training/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:training -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/campaign-FSA/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:campaign-fsa -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/timebanck/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:timebank -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/CCO_Preview_Testing_Flow_Multilingual/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:cco-preview-testing -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/CCO\ RCC\ Payment/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:cco-rcc-payment -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/IT\ Service\ Desk/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:it-service-desk -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/IT\ Service\ Desk\ Chat/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:it-service-desk-chat -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/MLTC/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:mltc -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/BH-PCP/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:bh-pcp -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/Direct\ Inward\ Dial/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:direct-inward-dial -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/CE\ Welcome\ Team/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:ce-welcome -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/Clinical\ BH\ Inbound/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:clinical-bh-inbound -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/Pharmacy\ MedConnect\ Inbound/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:pharmacy-medconnect-inbound -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/Pharmacy_MCR_Pharmacist_Outreach_Inbound_Flow/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:pharmacy-mcr-outreach -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/QHP\ Binder\ Payments/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:qhp-binder-payments -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/LTC\ Campaign/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:ltc-campaign -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/SDOH\ Campaign/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:sdoh-campaign -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              resources/Outbound\ Calls/*)
                DEPLOY_COMMANDS="$DEPLOY_COMMANDS npm run deploy:outbound-calls -- --c '[B-389745] testing cicd' --skip-confirmation &&"
                ;;
              *)
                echo "No deployment command for: $folder"
                ;;
            esac
          done

          if [[ -n "$DEPLOY_COMMANDS" ]]; then
            echo "Running deployments..."
            eval "${DEPLOY_COMMANDS::-2}" # Elimina el último "&&"
          else
            echo "No deployments to run."
          fi
