name: Generate and Push Tag

on:
  push:
    branches:
      - feature/event-folders

jobs:
  generate-tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up GitHub identity
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Authenticate with PAT
      run: |
        git remote set-url origin https://xle29111:${{ secrets.PAT }}@github.com/xle29111/twilio-chat.git

    - name: Generate version
      id: generate-version
      run: |
        # Obtener el último tag o usar "v1.0.0" si no hay ninguno
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")

        # Extraer la versión actual
        VERSION=$(echo "$LAST_TAG" | tr -d 'v')

        # Incrementar el número de patch
        MAJOR=$(echo "$VERSION" | awk -F. '{print $1}')
        MINOR=$(echo "$VERSION" | awk -F. '{print $2}')
        PATCH=$(echo "$VERSION" | awk -F. '{print $3}')
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"

        # Guardar la nueva versión en una variable de salida
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_OUTPUT

    - name: Create and Push the tag with a comment
      run: |
        # Crear el tag anotado con un comentario
        git tag -a ${{ steps.generate-version.outputs.NEW_VERSION }} -m "Tagging version ${{ steps.generate-version.outputs.NEW_VERSION }} as part of release process"

        # Hacer push del tag a la rama
        git push origin ${{ steps.generate-version.outputs.NEW_VERSION }}