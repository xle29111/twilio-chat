name: Generate Comment

on:
  push:
    paths:
      - 'my-project/resources/CCO MS/**'
      - 'my-project/resources/CCO PS/**'
      - 'my-project/resources/chat/**'
    branches:
      - 'feature/**'
      - 'develop'

jobs:
  detect-changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Determine changed folders
      id: changed-files
      uses: tj-actions/changed-files@v34
      with:
        files: |
          my-project/resources/CCO MS/**
          my-project/resources/CCO PS/**
          my-project/resources/chat/**

    - name: Get commit message or pull request title
      id: get-message
      run: |
        if [[ "${GITHUB_REF}" == refs/heads/feature/* ]]; then
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
        elif [[ "${GITHUB_REF}" == refs/heads/develop ]]; then
          PR_TITLE=$(gh pr view ${{ github.event.pull_request.number }} --json title --jq '.title')
        fi
        echo "::set-output name=message::${COMMIT_MESSAGE:-$PR_TITLE}"

    - name: Read package.json version
      id: get-package-version
      run: |
        VERSION=$(jq -r '.version' ./my-project/package.json)
        echo "::set-output name=version::$VERSION"

    - name: Determine branch label
      id: get-branch-label
      run: |
        if [[ "${GITHUB_REF}" == refs/heads/feature/* ]]; then
          LABEL="DEV"
        elif [[ "${GITHUB_REF}" == refs/heads/develop ]]; then
          LABEL="ST"
        fi
        echo "::set-output name=label::$LABEL"

    - name: Generate comment
      run: |
        declare -A folders
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          folder=$(basename $(dirname "$file"))
          if [[ "$folder" =~ ^(CCO\ MS|CCO\ PS|chat)$ ]]; then
            folders["$folder"]=1
          fi
        done

        for folder in "${!folders[@]}"; do
          COMMENT="$folder, ${{ steps.get-message.outputs.message }}, ${{ steps.get-package-version.outputs.version }}, ${{ steps.get-branch-label.outputs.label }}"
          echo $COMMENT
        done