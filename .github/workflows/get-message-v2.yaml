name: Custom Comment Pipeline

on:
  push:
    branches:
      - feature/**  # ğŸ”¹ Detecta cambios en ramas feature
      - develop     # ğŸ”¹ Detecta cambios en la rama develop

jobs:
  generate-comment:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del cÃ³digo
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # ğŸ”¹ Obtiene el commit actual y el anterior

      # Paso 2: Detectar cambios en las carpetas especÃ­ficas
      - name: Detect changes in folders
        id: detect-changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            cco_ms:
              - 'my-project/resources/CCO MS/**'
            cco_ps:
              - 'my-project/resources/CCO PS/**'
            chat:
              - 'my-project/resources/chat/**'

      # Paso 3: Obtener el mensaje del Ãºltimo commit o el tÃ­tulo del PR
      - name: Get commit message or PR title
        id: get-message
        run: |
          if [[ $GITHUB_REF == refs/heads/feature/* ]]; then
            # Si es una rama feature, obtener el mensaje del Ãºltimo commit
            MESSAGE=$(git log -1 --pretty=%B)
          elif [[ $GITHUB_REF == refs/heads/develop ]]; then
            # Si es la rama develop, obtener el tÃ­tulo del PR
            PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
            MESSAGE=$(gh pr view $PR_NUMBER --json title --jq '.title')
          fi
          echo "message=$MESSAGE" >> $GITHUB_OUTPUT

      # Paso 4: Obtener la versiÃ³n del archivo package.json
      - name: Get package.json version
        id: get-version
        run: |
          VERSION=$(jq -r .version my-project/package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Paso 5: Determinar la etiqueta (DEV o ST)
      - name: Determine tag
        id: determine-tag
        run: |
          if [[ $GITHUB_REF == refs/heads/feature/* ]]; then
            TAG="DEV"
          elif [[ $GITHUB_REF == refs/heads/develop ]]; then
            TAG="ST"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      # Paso 6: Mostrar el comentario en la consola
      - name: Print custom comment
        run: |
          if [[ ${{ steps.detect-changes.outputs.cco_ms }} == 'true' ]]; then
            echo "CCO MS + ${{ steps.get-message.outputs.message }} + ${{ steps.get-version.outputs.version }} + ${{ steps.determine-tag.outputs.tag }}"
          fi
          if [[ ${{ steps.detect-changes.outputs.cco_ps }} == 'true' ]]; then
            echo "CCO PS + ${{ steps.get-message.outputs.message }} + ${{ steps.get-version.outputs.version }} + ${{ steps.determine-tag.outputs.tag }}"
          fi
          if [[ ${{ steps.detect-changes.outputs.chat }} == 'true' ]]; then
            echo "Chat + ${{ steps.get-message.outputs.message }} + ${{ steps.get-version.outputs.version }} + ${{ steps.determine-tag.outputs.tag }}"
          fi