- name: Detect changes between tags
  shell: bash
  run: |
    new_release_tag=${{ github.event.inputs.new_release_tag }}
    latest_release=$LATEST_RELEASE

    echo "Comparing changes between $latest_release and $new_release_tag..."

    # Método alternativo para obtener cambios con tags
    changes=$(git log $latest_release..$new_release_tag --pretty=format:"%h %d %s" -- my-project/resources | grep -v "tag: $latest_release")
    
    # Si no hay cambios, usar el último commit como referencia
    if [ -z "$changes" ]; then
      changes=$(git log $latest_release..$new_release_tag --pretty=format:"%h %d %s" -n 1 -- my-project/resources)
    fi

    # Formatear la salida
    formatted_changes=$(echo "$changes" | awk '{
      gsub(/[()]/, "", $2);  # Remover paréntesis de las referencias
      if ($2 ~ /tag:/) {
        split($2, tags, ",");
        for (i in tags) {
          if (tags[i] ~ /tag:/) {
            gsub(/tag: /, "", tags[i]);
            print tags[i];
            for (j=3; j<=NF; j++) print $j;
            print "";
          }
        }
      } else {
        print $1;
        for (j=3; j<=NF; j++) print $j;
        print "";
      }
    }')

    # Codificar para GITHUB_ENV
    encoded_changes=$(echo "$formatted_changes" | sed -e ':a' -e 'N' -e '$!ba' -e 's/%/%25/g' -e 's/\n/%0A/g' -e 's/\r/%0D/g')
    echo "CHANGES=${encoded_changes}" >> $GITHUB_ENV
    echo "Detected changes:"
    echo "$formatted_changes"