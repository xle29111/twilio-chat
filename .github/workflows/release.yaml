name: Detect Changes Between Tags

on:
  workflow_dispatch:
    inputs:
      new_release_tag:
        description: 'Enter the new release tag version'
        required: true

jobs:
  detect-changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 

    - name: Get latest release
      id: get_latest_release
      env:
        GH_TOKEN: ${{ github.token }}  
      run: |
        latest_release=$(gh release list --exclude-drafts --exclude-pre-releases --limit 1 | awk '{print $1}')
        echo "Latest release: $latest_release"
        echo "latest_release=$latest_release" >> $GITHUB_OUTPUT  

    - name: Detect changes between tags
      id: detect_changes
      shell: bash
      run: |
        new_release_tag=${{ github.event.inputs.new_release_tag }}
        latest_release=${{ steps.get_latest_release.outputs.latest_release }}

        echo "New release: $new_release_tag"
        echo "Latest release: $latest_release"
        
        echo "Comparing changes between $new_release_tag and $latest_release..."

        changes=$(git diff --name-only $latest_release $new_release_tag -- my-project/resources | awk -F/ '{print $3}' | sort -u | tr '\n' '\n' | sed 's/,$//')
        echo "CHANGES=$(echo $changes)" >> $GITHUB_ENV
        echo "Detected changes: $changes"

    - name: Authenticate with GitHub
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create new release using GitHub CLI
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.event.inputs.new_release_tag }} \
          --title "${{ github.event.inputs.new_release_tag }}" \
          --notes "Changes detected in this release:\n${{ env.CHANGES }}"
