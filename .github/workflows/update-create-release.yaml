name: Generating Pre-release

on:
  workflow_dispatch:
    inputs:
      new_release_tag:
        description: 'Enter the new release tag version'
        required: true

jobs:
  detect-changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        latest_release=$(gh release view --json tagName -q '.tagName')
        echo "Latest release: $latest_release"
        echo "LATEST_RELEASE=$latest_release" >> $GITHUB_ENV

    - name: Create release notes
      id: create_release_notes
      shell: bash
      run: |
        new_release_tag=${{ github.event.inputs.new_release_tag }}
        latest_release=$LATEST_RELEASE

        MODIFIED_FOLDERS=$(git diff --name-only $latest_release $new_release_tag -- my-project/resources | awk -F/ '{print $3}' | sort -u | tr '\n' ',' | sed 's/,$//' | sed 's/,/, /g')

        echo "Changes detected in this release:" > release_notes.txt
        echo "" >> release_notes.txt
        echo "Modified folders: $MODIFIED_FOLDERS" >> release_notes.txt
        echo "" >> release_notes.txt
        echo "Changes in this release: $new_release_tag" >> release_notes.txt

        cat release_notes.txt

    - name: Create or update release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        tag="${{ github.event.inputs.new_release_tag }}"

        echo "Checking if release with tag '$tag' exists..."
        if gh release view "$tag" >/dev/null 2>&1; then
          echo "Release with tag '$tag' already exists. Updating it to be a final release..."
          gh release edit "$tag" \
            --notes-file release_notes.txt \
            --title "$tag" \
            --draft=false \
            --prerelease=false
        else
          echo "No release with tag '$tag' exists. Creating a new one..."
          gh release create "$tag" \
            --notes-file release_notes.txt \
            --title "$tag" \
            --prerelease=false
        fi
