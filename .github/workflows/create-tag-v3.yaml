name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  compare_and_tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all commit history


      # Step 6: Get the version from package.json
      - name: Get version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        working-directory: ./my-project

      # Step 4: Check if the tag already exists
      - name: Check for existing tag
        id: check_tag
        run: |
          TAG_EXISTS=$(git tag -l "v${{ env.VERSION }}")
          if [ -n "$TAG_EXISTS" ]; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

     # Step 6: Get the current commit
      - name: Get current commit
        if: env.TAG_EXISTS == 'false'
        id: get_current_commit
        run: |
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "CURRENT_COMMIT=$CURRENT_COMMIT" >> $GITHUB_ENV

      # Step 7: Get the previous commit
      - name: Get previous commit
        if: env.TAG_EXISTS == 'false'
        id: get_previous_commit
        run: |
          PREVIOUS_COMMIT=$(git rev-list -n 1 HEAD^1)
          echo "PREVIOUS_COMMIT=$PREVIOUS_COMMIT" >> $GITHUB_ENV

      # Step 8: Compare commits to identify changes
      - name: Compare commits
        if: env.TAG_EXISTS == 'false'
        id: compare_commits
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ env.PREVIOUS_COMMIT }} ${{ env.CURRENT_COMMIT }})
          echo "Changed files: $CHANGED_FILES"
          AFFECTED_FOLDERS=""
          for FOLDER in chat CCO\ MS CCO\ PS; do
            if echo "$CHANGED_FILES" | grep -q "my-project/resources/$FOLDER/"; then
              if [ -z "$AFFECTED_FOLDERS" ]; then
                AFFECTED_FOLDERS="$FOLDER"
              else
                AFFECTED_FOLDERS="$AFFECTED_FOLDERS, $FOLDER"
              fi
            fi
          done
          if [ -z "$AFFECTED_FOLDERS" ]; then
            echo "No relevant changes detected."
            exit 1
          else
            echo "AFFECTED_FOLDERS=$AFFECTED_FOLDERS" >> $GITHUB_ENV
          fi

      # Step 9: Create a new tag based on the version
      - name: Create and push tag
        if: env.TAG_EXISTS == 'false'
        env:
          VERSION: ${{ env.VERSION }}
          AFFECTED_FOLDERS: ${{ env.AFFECTED_FOLDERS }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "$AFFECTED_FOLDERS"
          git push origin "refs/tags/v$VERSION"