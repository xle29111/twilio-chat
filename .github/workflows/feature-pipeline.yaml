name: Detecting Folder Changes

on:
  push:
    branches:
      - 'feature/event-folders'
    paths:
      - 'my-project/resources/**'  # üîπ Detecta cambios en cualquier carpeta dentro de /my-project/resources

jobs:
  deploy:
    runs-on: ubuntu-latest  # üîπ Usa el runner especificado
    environment: develop  # üîπ Usa el environment "develop"

    steps:
      # Paso 1: Checkout del c√≥digo
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # üîπ Obtiene el commit actual y el anterior

      # Paso 2: Detectar cambios y almacenar las carpetas afectadas en un archivo de texto
      - name: Detect Changes and Save to File
        id: detect-changes
        run: |
          # Obtener la lista de archivos modificados entre el commit anterior y el actual
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)

          # Crear un archivo para guardar las carpetas afectadas
          for FOLDER in my-project/resources/chat my-project/resources/CCO\ MS my-project/resources/CCO\ PS my-project/resources/CCO_Progressive_Testing_Flow_Multilingual my-project/resources/Declined\ Payment my-project/resources/training my-project/resources/campaign-FSA my-project/resources/timebank my-project/resources/CCO_Preview_Testing_Flow_Multilingual my-project/resources/CCO\ RCC\ Payment my-project/resources/IT\ Service\ Desk my-project/resources/IT\ Service\ Desk\ Chat my-project/resources/MLTC my-project/resources/BH-PCP my-project/resources/Direct\ Inward\ Dial my-project/resources/CE\ Welcome\ Team my-project/resources/Clinical\ BH\ Inbound my-project/resources/Pharmacy\ MedConnect\ Inbound my-project/resources/Pharmacy_MCR_Pharmacist_Outreach_Inbound_Flow my-project/resources/QHP\ Binder\ Payments my-project/resources/LTC\ Campaign my-project/resources/SDOH\ Campaign my-project/resources/Outbound\ Calls; do
            if echo "$CHANGED_FILES" | grep -q "$FOLDER/"; then
              echo "$FOLDER" >> changed_folders.txt
            fi
          done

          # Mostrar el contenido del archivo (para debugging)
          changed_folders.txt

      # Paso 3: Configurar identidad de git
      - name: Configure Git identity
        run: |
          git config --global user.name "Xavier Encarnacion"
          git config --global user.email "xavier.encarnacion@github.com"

      # Paso 4: Agregar y hacer commit del archivo changed_folders.txt
      - name: Commit Changed Folders File
        run: |
          # Agregar el archivo changed_folders.txt al √°rea de staging
          #git checkout feature/event-folders
          #git add my-project/changed_folders.txt
          #git commit -m "Agregar archivo changed_folders.txt con las carpetas afectadas por cambios"

      # Paso 5: Realizar push con el token de GitHub
      - name: Push Changes to Repository
        run: |
          # Hacer push del archivo committeado usando el token de GitHub
          #git push https://xle29111:${{ secrets.TOKEN }}@github.com/xle29111/twilio-chat.git HEAD:feature/event-folders


      # Paso 6: Ejecutar los comandos de despliegue correspondientes (comentados)
      - name: Deploy Based on Changes
        run: |
          # Leer el archivo de carpetas afectadas
          CHANGED_FOLDERS=$(cat changed_folders.txt)

          # Funci√≥n para ejecutar el comando de despliegue seg√∫n la carpeta
          deploy_folder() {
            case $1 in
              "my-project/resources/chat")
                echo "Desplegando Chat..."
                # npm run deploy:chat -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/CCO MS")
                echo "Desplegando CCO MS..."
                # npm run deploy:cco-ms -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/CCO PS")
                echo "Desplegando CCO PS..."
                # npm run deploy:cco-ps -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/CCO_Progressive_Testing_Flow_Multilingual")
                echo "Desplegando CCO Progressive Testing..."
                # npm run deploy:cco-progressive-testing -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/Declined Payment")
                echo "Desplegando Declined Payment..."
                # npm run deploy:declined-payment -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/training")
                echo "Desplegando Training..."
                # npm run deploy:training -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/campaign-FSA")
                echo "Desplegando Campaign FSA..."
                # npm run deploy:campaign-fsa -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/timebank")
                echo "Desplegando Timebank..."
                # npm run deploy:timebank -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/CCO_Preview_Testing_Flow_Multilingual")
                echo "Desplegando CCO Preview Testing..."
                # npm run deploy:cco-preview-testing -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/CCO RCC Payment")
                echo "Desplegando CCO RCC Payment..."
                # npm run deploy:cco-rcc-payment -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/IT Service Desk")
                echo "Desplegando IT Service Desk..."
                # npm run deploy:it-service-desk -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/IT Service Desk Chat")
                echo "Desplegando IT Service Desk Chat..."
                # npm run deploy:it-service-desk-chat -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/MLTC")
                echo "Desplegando MLTC..."
                # npm run deploy:mltc -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/BH-PCP")
                echo "Desplegando BH-PCP..."
                # npm run deploy:bh-pcp -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/Direct Inward Dial")
                echo "Desplegando Direct Inward Dial..."
                # npm run deploy:direct-inward-dial -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/CE Welcome Team")
                echo "Desplegando CE Welcome Team..."
                # npm run deploy:ce-welcome -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/Clinical BH Inbound")
                echo "Desplegando Clinical BH Inbound..."
                # npm run deploy:clinical-bh-inbound -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/Pharmacy MedConnect Inbound")
                echo "Desplegando Pharmacy MedConnect Inbound..."
                # npm run deploy:pharmacy-medconnect-inbound -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/Pharmacy_MCR_Pharmacist_Outreach_Inbound_Flow")
                echo "Desplegando Pharmacy MCR Outreach..."
                # npm run deploy:pharmacy-mcr-outreach -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/QHP Binder Payments")
                echo "Desplegando QHP Binder Payments..."
                # npm run deploy:qhp-binder-payments -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/LTC Campaign")
                echo "Desplegando LTC Campaign..."
                # npm run deploy:ltc-campaign -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/SDOH Campaign")
                echo "Desplegando SDOH Campaign..."
                # npm run deploy:sdoh-campaign -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "my-project/resources/Outbound Calls")
                echo "Desplegando Outbound Calls..."
                # npm run deploy:outbound-calls -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              *)
                echo "No se detectaron cambios relevantes en la carpeta: $1"
                ;;
            esac
          }

          # Iterar sobre las carpetas y ejecutar el comando de despliegue correspondiente
          while IFS= read -r FOLDER; do
            if [[ "$FOLDER" == "Carpetas afectadas:" ]]; then
              continue  # Saltar la l√≠nea de encabezado
            fi
            deploy_folder "$FOLDER"
          done <<< "$CHANGED_FOLDERS"