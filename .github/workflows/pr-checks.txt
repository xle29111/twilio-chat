name: PR checks

on:
  pull_request:
    branches:
      - main
      - rt

jobs:
  # First Status Check: Validate flows_to_deploy.json
  validate_flows:
    name: config-file
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Get modified folders from PR compared to base branch
        id: modified
        run: |
          echo "Detecting modified folders by comparing with the base branch..."
          BASE_BRANCH=${{ github.base_ref }}
          echo "Base branch is: $BASE_BRANCH"
          echo "Source branch is: ${{ github.head_ref }}"

          git fetch origin $BASE_BRANCH

          CHANGED_FILES=$(git diff --name-only origin/$BASE_BRANCH...HEAD | grep '^my-project/resources/' || true)

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changes detected in my-project/resources/"
            echo "MODIFIED_FOLDERS=" >> $GITHUB_ENV
            exit 0
          fi

          MODIFIED_FOLDERS=$(echo "$CHANGED_FILES" | cut -d'/' -f3 | sort -u)
          echo "Modified folders:"
          echo "$MODIFIED_FOLDERS"

          echo "MODIFIED_FOLDERS<<EOF" >> $GITHUB_ENV
          echo "$MODIFIED_FOLDERS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Validate flows_to_deploy.json
        run: |
          # If no modified folders are detected, skip the validation
          if [ -z "$MODIFIED_FOLDERS" ]; then
            echo "No folders to validate."
            exit 0
          fi

          # Validate each modified folder against flows_to_deploy.json
          echo "$MODIFIED_FOLDERS" | while IFS= read -r folder; do
            if [ -z "$folder" ]; then
              continue
            fi

            echo "üîç Checking folder: '$folder'"
            if ! jq -e --arg folder "$folder" '.[] | select(.application == $folder and .deploy == true)' flows_to_deploy.json > /dev/null; then
              echo "‚ùå The folder '$folder' is not enabled for deploy in flows_to_deploy.json"
              exit 1
            else
              echo "‚úÖ The folder '$folder' is enabled for deploy."
            fi
          done

  up_to_date:
    name: Check if Feature Branch is Up-to-Date with Base
    runs-on: ubuntu-latest
    needs: validate_flows

    steps:
      - name: Placeholder for checking if the feature branch is up-to-date with the base branch
        run: |
          echo "This is a placeholder for checking if the feature branch is up-to-date."
          echo "You need to implement the script that checks if the feature branch is up-to-date."

  json_lint:
    name: Lint JSON File
    runs-on: ubuntu-latest
    needs: validate_flows

    steps:
      - name: Placeholder for JSON linting
        run: |
          echo "This is a placeholder for the JSON linting check."
          echo "You need to implement the script that lints the JSON files (e.g., flows_to_deploy.json)."
