name: CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        type: choice
        options:
          - develop
          - st
          - rt
      version:
        description: 'Enter version to deploy'
        required: true
        type: string

jobs:
  deploy:
    runs-on: hf-cicd-ubuntu-latest
    environment: ${{ github.event.inputs.environment }}  # Configura el ambiente dinÃ¡micamente

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install
        working-directory: my-project

      - name: Load environment variables
        run: |
          echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" > my-project/.env
          echo "API_KEY_SID=${{ secrets.API_KEY_SID }}" >> my-project/.env
          echo "API_KEY_SECRET=${{ secrets.API_KEY_SECRET }}" >> my-project/.env
          echo "TWILIO_WORKSPACE_SID=${{ secrets.TWILIO_WORKSPACE_SID }}" >> my-project/.env
          echo "STAGE=${{ github.event.inputs.environment }}" >> my-project/.env

      - name: Extract service from tag
        id: extract-service
        run: |
          echo "Fetching tags from repository..."
          git fetch --tags
          TAG="${{ github.event.inputs.version }}"
          echo "Looking for tag: $TAG"
          SERVICE=$(git tag -l "$TAG" -n99 | awk -F ' ' '{print $2}')
          echo "Extracted SERVICE: $SERVICE"
          echo "SERVICE=${SERVICE}" >> $GITHUB_ENV

      - name: Deploy service
        run: |
          echo "Deploying service: ${{ env.SERVICE }}"
          if [[ -z "${{ env.SERVICE }}" ]]; then
            echo "Error: SERVICE is empty. Deployment aborted."
            exit 1
          else
            case "${{ env.SERVICE }}" in
              "chat")
                npm run deploy:chat -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "CCO MS")
                npm run deploy:cco-ms -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              "CCO PS")
                npm run deploy:cco-ms -- --c "[B-389745] testing cicd" --skip-confirmation
                ;;
              *)
                echo "Error: Unknown service '${{ env.SERVICE }}'. Deployment aborted."
                exit 1
                ;;
            esac
          fi
        working-directory: my-project