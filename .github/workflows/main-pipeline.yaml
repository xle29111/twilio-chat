name: Manual Deployment Workflow

on:
  workflow_dispatch:  # Permite ejecutar manualmente el pipeline
    inputs:
      branch:
        description: 'Branch to checkout (default: main)'
        required: false
        default: 'main'

jobs:
  detect-and-deploy:
    runs-on: ubuntu-latest  # ðŸ”¹ Usa el runner especificado
    environment: develop  # ðŸ”¹ Usa el environment "develop"

    steps:
      # Paso 1: Checkout del cÃ³digo
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 2  # ðŸ”¹ Obtiene el historial necesario para el diff

      # Paso 2: Descargar artefacto de carpetas afectadas
      - name: Download Changed Folders Artifact
        uses: actions/download-artifact@v4
        with:
          name: changed_folders
          path: .  # Guardar el artefacto en el directorio actual

      # Paso 3: Leer artefacto y ejecutar comandos de despliegue
      - name: Deploy Based on Changes
        run: |
          # Leer el archivo descargado
          if [ ! -f "changed_folders.txt" ]; then
            echo "El archivo 'changed_folders.txt' no existe. Nada que desplegar."
            exit 0
          fi

          CHANGED_FOLDERS=$(cat changed_folders.txt)
          echo "Carpetas afectadas detectadas:"
          echo "$CHANGED_FOLDERS"

          # FunciÃ³n para ejecutar el despliegue segÃºn la carpeta
          deploy_folder() {
            case $1 in
              "my-project/resources/chat")
                echo "Desplegando Chat..."
                npm run deploy:chat -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/CCO MS")
                echo "Desplegando CCO MS..."
                npm run deploy:cco-ms -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/CCO PS")
                echo "Desplegando CCO PS..."
                npm run deploy:cco-ps -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/CCO_Progressive_Testing_Flow_Multilingual")
                echo "Desplegando CCO Progressive Testing..."
                npm run deploy:cco-progressive-testing -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/Declined Payment")
                echo "Desplegando Declined Payment..."
                npm run deploy:declined-payment -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/training")
                echo "Desplegando Training..."
                npm run deploy:training -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/campaign-FSA")
                echo "Desplegando Campaign FSA..."
                npm run deploy:campaign-fsa -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/timebank")
                echo "Desplegando Timebank..."
                npm run deploy:timebank -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/CCO_Preview_Testing_Flow_Multilingual")
                echo "Desplegando CCO Preview Testing..."
                npm run deploy:cco-preview-testing -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/CCO RCC Payment")
                echo "Desplegando CCO RCC Payment..."
                npm run deploy:cco-rcc-payment -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/IT Service Desk")
                echo "Desplegando IT Service Desk..."
                npm run deploy:it-service-desk -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/IT Service Desk Chat")
                echo "Desplegando IT Service Desk Chat..."
                npm run deploy:it-service-desk-chat -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/MLTC")
                echo "Desplegando MLTC..."
                npm run deploy:mltc -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/BH-PCP")
                echo "Desplegando BH-PCP..."
                npm run deploy:bh-pcp -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/Direct Inward Dial")
                echo "Desplegando Direct Inward Dial..."
                npm run deploy:direct-inward-dial -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/CE Welcome Team")
                echo "Desplegando CE Welcome Team..."
                npm run deploy:ce-welcome -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/Clinical BH Inbound")
                echo "Desplegando Clinical BH Inbound..."
                npm run deploy:clinical-bh-inbound -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/Pharmacy MedConnect Inbound")
                echo "Desplegando Pharmacy MedConnect Inbound..."
                npm run deploy:pharmacy-medconnect-inbound -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/Pharmacy_MCR_Pharmacist_Outreach_Inbound_Flow")
                echo "Desplegando Pharmacy MCR Outreach..."
                npm run deploy:pharmacy-mcr-outreach -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/QHP Binder Payments")
                echo "Desplegando QHP Binder Payments..."
                npm run deploy:qhp-binder-payments -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/LTC Campaign")
                echo "Desplegando LTC Campaign..."
                npm run deploy:ltc-campaign -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/SDOH Campaign")
                echo "Desplegando SDOH Campaign..."
                npm run deploy:sdoh-campaign -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              "my-project/resources/Outbound Calls")
                echo "Desplegando Outbound Calls..."
                npm run deploy:outbound-calls -- --c "[Manual Deployment] testing" --skip-confirmation
                ;;
              *)
                echo "No se detectaron comandos especÃ­ficos para la carpeta: $1"
                ;;
            esac
          }

          # Iterar sobre las carpetas afectadas y ejecutar los comandos correspondientes
          while IFS= read -r FOLDER; do
            if [[ -n "$FOLDER" ]]; then
              deploy_folder "$FOLDER"
            fi
          done <<< "$CHANGED_FOLDERS"
